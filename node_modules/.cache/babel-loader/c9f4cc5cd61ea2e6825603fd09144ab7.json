{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Tech.me\\\\Downloads\\\\react1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Tech.me\\\\Downloads\\\\react1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Tech.me\\\\Downloads\\\\react1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tech.me\\\\Downloads\\\\react1\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Box from './components/Box';\nvar gridSize = 6;\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tiles = _useState2[0],\n    setTiles = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTiles = _useState4[0],\n    setSelectedTiles = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    matchedPairs = _useState6[0],\n    setMatchedPairs = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    lockBoard = _useState8[0],\n    setLockBoard = _useState8[1];\n  useEffect(function () {\n    initializeGame();\n  }, []);\n  var initializeGame = function initializeGame() {\n    var numbers = Array.from({\n      length: gridSize * gridSize / 2\n    }, function (_, index) {\n      return index + 1;\n    });\n    var shuffleNumbers = [].concat(numbers, numbers).sort(function () {\n      return Math.random() - 0.5;\n    });\n    setTiles(shuffleNumbers.map(function (number, index) {\n      return {\n        id: index,\n        number: number,\n        flipped: false,\n        matched: false\n      };\n    }));\n    setMatchedPairs(0);\n  };\n  var handleTileClick = function handleTileClick(tile) {\n    if (lockBoard || title.flipped || selectedTiles.length === 2) return;\n    var updatedTiles = tiles.map(function (t) {\n      return t.id === tile.id ? _objectSpread(_objectSpread({}, t), {}, {\n        flipped: true\n      }) : t;\n    });\n    setTiles(updatedTiles);\n    setSelectedTiles([].concat(_toConsumableArray(selectedTiles), [title]));\n    if (selectedTiles.length === 1) {\n      if (selectedTiles[0].number === tile.number) {\n        setMatchedPairs(matchedPairs + 1);\n        setSelectedTiles([]);\n      } else {\n        setLockBoard(true);\n        setTimout(function () {\n          flipBack(selectedTiles[0], tile);\n        }, 1000);\n      }\n    }\n  };\n  var flipBack = function flipBack(tile1, tile2) {\n    var updatedTiles = tiles.map(function (tile) {\n      return tile.id === tile1.id || tile.id === tile2.id ? _objectSpread(_objectSpread({}, tile), {}, {\n        flipped: false\n      }) : tile;\n    });\n    setTiles(updatedTiles);\n    setSelectedTiles([]);\n    setLockBoard(false);\n  };\n  useEffect(function () {\n    if (matchedPairs === gridSize * gridSize / 2) {\n      setTimout(function () {\n        initializeGame();\n      }, 1000);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    tiles: tiles,\n    handleTileClick: handleTileClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }), matchedPairs === gridSize * gridSize / 2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 51\n    }\n  }, \"Congratulations! You won!\"));\n}","map":{"version":3,"names":["React","useState","useEffect","Box","gridSize","App","_useState","_useState2","_slicedToArray","tiles","setTiles","_useState3","_useState4","selectedTiles","setSelectedTiles","_useState5","_useState6","matchedPairs","setMatchedPairs","_useState7","_useState8","lockBoard","setLockBoard","initializeGame","numbers","Array","from","length","_","index","shuffleNumbers","concat","sort","Math","random","map","number","id","flipped","matched","handleTileClick","tile","title","updatedTiles","t","_objectSpread","_toConsumableArray","setTimout","flipBack","tile1","tile2","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Tech.me/Downloads/react1/src/App.js"],"sourcesContent":["\nimport React,{useState,useEffect} from 'react';\nimport './App.css';\nimport Box from './components/Box'\nconst gridSize=6;\n\nexport default function App (){\n  const [tiles,setTiles]=useState([])\n  const [selectedTiles,setSelectedTiles]=useState([])\n  const [matchedPairs,setMatchedPairs]=useState(0);\n  const [lockBoard,setLockBoard]=useState(false);\n\n  useEffect(()=>{\n    initializeGame();\n  },[])\n  const initializeGame=()=>{\n    const numbers= Array.from({length:gridSize*gridSize/2},(_,index)=>index+1)\n    const shuffleNumbers=[...numbers,...numbers].sort(()=> Math.random()-0.5);\n    setTiles(shuffleNumbers.map((number,index)=>({id:index,number,flipped:false,matched:false})));\n    setMatchedPairs(0)\n  }\n\n  const handleTileClick=(tile)=>{\n    if (lockBoard || title.flipped || selectedTiles.length===2) return ;\n    const updatedTiles=tiles.map((t)=>(t.id===tile.id?{...t,flipped:true}:t));\n    setTiles(updatedTiles)\n    setSelectedTiles([...selectedTiles,title]);\n\n    if (selectedTiles.length===1){\n      if (selectedTiles[0].number===tile.number){\n        setMatchedPairs(matchedPairs + 1);\n        setSelectedTiles([]);\n      }else{\n        setLockBoard(true);\n        setTimout(()=>{\n          flipBack(selectedTiles[0],tile);\n        },1000);\n      }\n    }\n\n  }\n  const flipBack=(tile1,tile2)=>{\n    const updatedTiles=tiles.map((tile)=>\n      tile.id===tile1.id || tile.id===tile2.id ? {...tile,flipped:false} :tile\n    )\n\n    setTiles(updatedTiles);\n    setSelectedTiles([]);\n    setLockBoard(false);\n  }\n\n  useEffect(()=>{\n    if (matchedPairs===gridSize*gridSize/2){\n      setTimout(()=>{\n        initializeGame();\n      },1000);\n\n    }\n  },[])\n  return (\n    <div className=\"App\">\n     <Box  tiles={tiles} handleTileClick={handleTileClick}/>\n     {matchedPairs === gridSize * gridSize / 2 && <div className=\"message\">Congratulations! You won!</div>}\n    </div>)\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}